{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import { OrderedSet } from 'immutable';\nconst EMPTY_SET = OrderedSet();\n\n\nexport default class DraftJsToHTML {\n\n    constructor(rawContent) {\n        this.rawContent = rawContent;\n\n        this.ranges = this.buildRangesArray();\n    }\n\n    buildRangesArray(){\n        // TODO : handle multiple blocks\n        const { inlineStyleRanges, entityRanges, text } = this.rawContent.blocks[0];\n\n        const styles = this.decodeInlineStyle(text, inlineStyleRanges);\n        const entities = this.decodeEntities(text, entityRanges);\n\n        return styles.reduce((result, current, index) => {\n            if(index === 1) {\n                result = [{\n                    entity: false,\n                    offset: 0,\n                    length: 0,\n                    style: result\n                }]\n            }\n\n            let lastItem = result[result.length-1];\n            let lastItemBis;\n            lastItem.length++;\n\n            if (lastItem.entity) {\n                lastItemBis = lastItem.styles[lastItem.styles.length - 1];\n                lastItemBis.length++;\n            }\n\n            const isEntity = (entities[index] !== null);\n            const isSameEntity = isEntity && lastItem.entityKey === entities[index];\n\n            if(isEntity) {\n                if (!isSameEntity) {\n\n                    result.push({\n                        entity: true,\n                        offset: index,\n                        length: 0,\n                        entityKey: entities[index],\n                        styles: [{\n                            offset: index,\n                            length: 0,\n                            style: current\n                        }]\n                    });\n                }else{\n\n                    if(! lastItemBis.style.equals(current) ) {\n                        lastItem.styles.push({\n                            offset: index,\n                            length: 0,\n                            style: current\n                        })\n                    }\n                }\n            }else if(lastItem.style && ! lastItem.style.equals(current) || lastItem.entity) {\n\n                result.push({\n                    entity: false,\n                    offset: index,\n                    length: 0,\n                    style: current\n                });\n            }\n\n            return result;\n        });\n    }\n\n    getEntity(key) {\n        return this.rawContent.entityMap[key];\n    }\n\n    decodeInlineStyle(text, ranges) {\n        var styles = new Array(text.length).fill(EMPTY_SET);\n\n        if (ranges) {\n            ranges.forEach((/*object*/ range) => {\n                var cursor = text.substr(0, range.offset).length;\n                var end = cursor + text.substr(range.offset, range.length).length;\n                while (cursor < end) {\n                    styles[cursor] = styles[cursor].add(range.style);\n                    cursor++;\n                }\n            });\n        }\n\n        return styles;\n    }\n\n    decodeEntities(text, ranges) {\n        var entities = new Array(text.length).fill(null);\n        if (ranges) {\n            ranges.forEach(\n                range => {\n                    // Using Unicode-enabled substrings converted to JavaScript lengths,\n                    // fill the output array with entity keys.\n                    var start = text.substr(0, range.offset).length;\n                    var end = start + text.substr(range.offset, range.length).length;\n                    for (var ii = start; ii < end; ii++) {\n                        entities[ii] = range.key;\n                    }\n                }\n            );\n        }\n\n        return entities;\n    }\n\n    createHtmlStyle(range) {\n        const { text } = this.rawContent.blocks[0];\n\n        return `<span class=\"${range.style.toArray().join(' ')}\">${text.substr(range.offset, range.length)}</span>`;\n    }\n\n    createHTmlEntities(range){\n        return `<span class=\"Entity\" data-type=\"${this.getEntity(range.entityKey).type}\">${ range.styles.map(this.createHtmlStyle.bind(this)).join('') }</span>`;\n    }\n\n    toHtml(ranges = this.ranges) {\n        return ranges.map(range => (!range.entity)?this.createHtmlStyle(range):this.createHTmlEntities(range)).join('');\n    }\n\n};"]}